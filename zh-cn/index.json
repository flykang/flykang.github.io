[{"categories":["leetcode"],"content":"test","date":"2022-12-21","objectID":"/zh-cn/posts/lc-1573/","tags":["greedy"],"title":"Leetcode 1573","uri":"/zh-cn/posts/lc-1573/"},{"categories":["leetcode"],"content":"Leetcode 1753, 没有想到思路 Leetcode 1753 ","date":"2022-12-21","objectID":"/zh-cn/posts/lc-1573/:0:0","tags":["greedy"],"title":"Leetcode 1573","uri":"/zh-cn/posts/lc-1573/"},{"categories":["leetcode"],"content":"方法 ","date":"2022-12-21","objectID":"/zh-cn/posts/lc-1573/:1:0","tags":["greedy"],"title":"Leetcode 1573","uri":"/zh-cn/posts/lc-1573/"},{"categories":["leetcode"],"content":"贪心 方法一：贪心 思路与算法 想通了就很好做，如果最大值大于其他两者之和，那么把其他两个用完都不会消耗完最大；如果小于的话，总是消去较大的那两个石头堆就行。 ","date":"2022-12-21","objectID":"/zh-cn/posts/lc-1573/:1:1","tags":["greedy"],"title":"Leetcode 1573","uri":"/zh-cn/posts/lc-1573/"},{"categories":["leetcode"],"content":"code class Solution { public: int maximumScore(int a, int b, int c) { int sum = a + b + c; int maxVal = max({a, b, c}); if (sum - maxVal \u003c maxVal) { return sum - maxVal; } else { return sum / 2; } } }; ","date":"2022-12-21","objectID":"/zh-cn/posts/lc-1573/:1:2","tags":["greedy"],"title":"Leetcode 1573","uri":"/zh-cn/posts/lc-1573/"},{"categories":null,"content":"About Me","date":"2019-08-02","objectID":"/zh-cn/about/","tags":null,"title":"About Me","uri":"/zh-cn/about/"},{"categories":null,"content":"E-mail tjbroadroad@163.com ","date":"2019-08-02","objectID":"/zh-cn/about/:0:0","tags":null,"title":"About Me","uri":"/zh-cn/about/"}]